{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport { ErrorComponent } from \"./error/error.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor(dialog) {\n      this.dialog = dialog;\n    }\n\n    intercept(req, next) {\n      return next.handle(req).pipe(catchError(error => {\n        let message = \"Unknown Error Occurred!\";\n\n        if (error.error.message) {\n          message = error.error.message;\n        }\n\n        this.dialog.open(ErrorComponent, {\n          data: {\n            error: error.error.message\n          }\n        });\n        return throwError(new Error(error.error.message));\n      }));\n    }\n\n  }\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.MatDialog));\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac,\n    providedIn: \"root\"\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}