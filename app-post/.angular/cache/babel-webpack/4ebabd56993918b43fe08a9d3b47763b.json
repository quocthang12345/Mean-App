{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { mimeType } from \"./mime-type.validator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../post.service\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/progress-spinner\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction PostCreateComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction PostCreateComponent_mat_card_1_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing Name\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_mat_card_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r4.imagePreview, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r4.form.value.name);\n  }\n}\n\nfunction PostCreateComponent_mat_card_1_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing Description\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_mat_card_1_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing Content\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\");\n    i0.ɵɵelementStart(1, \"form\", 1);\n    i0.ɵɵlistener(\"submit\", function PostCreateComponent_mat_card_1_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.savePost();\n    });\n    i0.ɵɵelementStart(2, \"mat-card-content\");\n    i0.ɵɵelementStart(3, \"mat-form-field\");\n    i0.ɵɵelementStart(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 2);\n    i0.ɵɵtemplate(7, PostCreateComponent_mat_card_1_mat_error_7_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵelementStart(9, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function PostCreateComponent_mat_card_1_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r8);\n\n      const _r3 = i0.ɵɵreference(12);\n\n      return _r3.click();\n    });\n    i0.ɵɵtext(10, \"Upload\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 4, 5);\n    i0.ɵɵlistener(\"change\", function PostCreateComponent_mat_card_1_Template_input_change_11_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onImagePicked($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, PostCreateComponent_mat_card_1_div_13_Template, 2, 2, \"div\", 6);\n    i0.ɵɵelementStart(14, \"mat-form-field\");\n    i0.ɵɵelementStart(15, \"mat-label\");\n    i0.ɵɵtext(16, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 7);\n    i0.ɵɵtemplate(18, PostCreateComponent_mat_card_1_mat_error_18_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-form-field\");\n    i0.ɵɵelementStart(20, \"mat-label\");\n    i0.ɵɵtext(21, \"Content\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 8);\n    i0.ɵɵtemplate(23, PostCreateComponent_mat_card_1_mat_error_23_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"mat-card-footer\");\n    i0.ɵɵelementStart(25, \"button\", 9);\n    i0.ɵɵtext(26, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"name\").invalid);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.imagePreview !== \"\" && ctx_r1.imagePreview && ctx_r1.form.get(\"image\").valid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"description\").invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"content\").invalid);\n  }\n}\n\nexport let PostCreateComponent = /*#__PURE__*/(() => {\n  class PostCreateComponent {\n    // @Output() postCreated = new EventEmitter<Post>();\n    constructor(postService, authService, route) {\n      this.postService = postService;\n      this.authService = authService;\n      this.route = route;\n      this.post = {\n        id: \"\",\n        name: \"\",\n        description: \"\",\n        content: \"\",\n        imagePath: \"\",\n        creator: \"\"\n      };\n      this.form = new FormGroup({\n        'name': new FormControl(null, {\n          validators: [Validators.required, Validators.minLength(8)]\n        }),\n        'description': new FormControl(null, {\n          validators: [Validators.required]\n        }),\n        'content': new FormControl(null, {\n          validators: [Validators.required]\n        }),\n        'image': new FormControl(null, {\n          validators: [Validators.required],\n          asyncValidators: [mimeType]\n        })\n      });\n      this.isLoading = false;\n    }\n\n    ngOnInit() {\n      this.authSub = this.authService.getAuthListener().subscribe(isAuth => {\n        this.isLoading = isAuth;\n      });\n      this.route.paramMap.subscribe(paramMaps => {\n        if (paramMaps.has(\"postId\")) {\n          this.postId = paramMaps.get(\"postId\");\n          console.log(this.postId);\n          this.postService.getOnePost(this.postId).subscribe(postData => {\n            this.post = {\n              id: postData._id,\n              name: postData.name,\n              description: postData.description,\n              content: postData.content,\n              imagePath: postData.imagePath,\n              creator: \"\"\n            };\n            this.form.setValue({\n              name: this.post.name,\n              description: this.post.description,\n              content: this.post.content,\n              image: this.post.imagePath\n            });\n            console.log(this.form);\n          });\n        } else {\n          this.postId = null;\n        }\n      });\n    }\n\n    onImagePicked(event) {\n      const file = event.target.files;\n      this.form.patchValue({\n        \"image\": file[0]\n      });\n      this.form.updateValueAndValidity();\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.imagePreview = reader.result;\n      };\n\n      reader.readAsDataURL(this.form.value.image);\n    }\n\n    savePost() {\n      if (this.form.invalid) return;\n      this.isLoading = true;\n\n      if (this.postId) {\n        this.isLoading = false;\n        const postUpdate = {\n          id: this.postId,\n          name: this.form.value.name,\n          description: this.form.value.description,\n          content: this.form.value.content,\n          imagePath: this.form.value.image,\n          creator: \"\"\n        };\n        this.postService.updatePost(postUpdate);\n      } else {\n        this.isLoading = false;\n        this.postService.addPost(this.form.value.name, this.form.value.description, this.form.value.content, this.form.value.image);\n      }\n\n      this.form.reset(); // this.postCreated.emit(post);\n    }\n\n    ngOnDestroy() {\n      this.authSub.unsubscribe();\n    }\n\n  }\n\n  PostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n    return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  PostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostCreateComponent,\n    selectors: [[\"app-post-create\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter Name...\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"filePicker\", \"\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"description\", \"placeholder\", \"Enter Description...\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"content\", \"placeholder\", \"Enter Content...\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn-test\"], [1, \"image-preview\"], [3, \"src\", \"alt\"]],\n    template: function PostCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PostCreateComponent_mat_spinner_0_Template, 1, 0, \"mat-spinner\", 0);\n        i0.ɵɵtemplate(1, PostCreateComponent_mat_card_1_Template, 27, 5, \"mat-card\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    directives: [i4.NgIf, i5.MatSpinner, i6.MatCard, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective, i6.MatCardContent, i8.MatFormField, i8.MatLabel, i9.MatInput, i7.DefaultValueAccessor, i7.NgControlStatus, i7.FormControlName, i10.MatButton, i6.MatCardFooter, i8.MatError],\n    styles: [\".btn-test[_ngcontent-%COMP%]{border-radius:5px;margin-left:10px}mat-form-field[_ngcontent-%COMP%], input[_ngcontent-%COMP%]{width:100%;height:auto}mat-card[_ngcontent-%COMP%]{padding:20px 40px}input[type=file][_ngcontent-%COMP%]{visibility:hidden}.image-preview[_ngcontent-%COMP%]{height:5rem;margin:1rem 0}.image-preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100%}\"]\n  });\n  return PostCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}