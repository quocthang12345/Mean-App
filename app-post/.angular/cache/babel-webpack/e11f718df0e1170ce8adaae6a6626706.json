{"ast":null,"code":"import { Subject, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let PostService = /*#__PURE__*/(() => {\n  class PostService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.posts = [];\n      this.subject = new Subject();\n    }\n\n    getPosts(pageSize, currentPage) {\n      const queryURL = `?pagesize=${pageSize}&currentpage=${currentPage}`;\n      this.http.get(\"http://angular-app.us-east-1.elasticbeanstalk.com/posts\" + queryURL).pipe(map(postData => {\n        return {\n          postPaginator: postData.data.map(post => {\n            return {\n              id: post._id.toString(),\n              name: post.name,\n              description: post.description,\n              content: post.content,\n              imagePath: post.imagePath,\n              creator: post.creator\n            };\n          }),\n          totalPost: postData.totalPost\n        };\n      })).subscribe(transformPostsData => {\n        this.posts = transformPostsData.postPaginator;\n        this.subject.next({\n          posts: [...transformPostsData.postPaginator],\n          totalPost: transformPostsData.totalPost\n        }); // thông báo đến các event về một bản sao được cập nhật\n      });\n    }\n\n    getOnePost(id) {\n      return this.http.get(`http://angular-app.us-east-1.elasticbeanstalk.com/posts/${id}`);\n    }\n\n    getUpdatePostListener() {\n      return this.subject.asObservable();\n    }\n\n    addPost(name, description, content, image) {\n      const formData = new FormData();\n      formData.append(\"id\", \"\");\n      formData.append(\"name\", name);\n      formData.append(\"description\", description);\n      formData.append(\"content\", content);\n      formData.append(\"image\", image, name);\n      this.http.post(\"http://angular-app.us-east-1.elasticbeanstalk.com/addPost\", formData).subscribe(responseMessage => {\n        this.router.navigate([\"/\"]);\n      });\n    }\n\n    updatePost(post) {\n      let postUpdate;\n\n      if (typeof post.imagePath == \"object\") {\n        postUpdate = new FormData();\n        postUpdate.append(\"id\", post.id);\n        postUpdate.append(\"name\", post.name);\n        postUpdate.append(\"description\", post.description);\n        postUpdate.append(\"content\", post.content);\n        postUpdate.append(\"image\", post.imagePath, post.name);\n      } else {\n        postUpdate = {\n          id: post.id,\n          name: post.name,\n          description: post.description,\n          content: post.content,\n          imagePath: post.imagePath\n        };\n      }\n\n      this.http.put(\"http://angular-app.us-east-1.elasticbeanstalk.com/updatePost\", postUpdate).subscribe(responseMessage => {\n        this.router.navigate([\"/\"]);\n      });\n    }\n\n    deletePost(id) {\n      return this.http.delete(`http://angular-app.us-east-1.elasticbeanstalk.com/deletePost/${id}`);\n    }\n\n  }\n\n  PostService.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  PostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: \"root\"\n  });\n  return PostService;\n})();","map":null,"metadata":{},"sourceType":"module"}